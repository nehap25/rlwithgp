(define (domain simple_world)
    (:requirements :strips :equality)

    ; predicates

    (:predicates
        ; static predicates
        (Robot ?robot)
        (Conf ?conf)
        (Obj ?obj)
        (WorldPose ?obj ?pose)
        (RelPose ?obj ?pose ?ref_obj)
        (PoseKin ?obj ?world_pose ?rel_pose ?ref_obj ?pose)
        (On ?other_obj ?obj)
        (Region ?region)
        (Touches ?obj ?pose ?region)
        (PushConf ?robot ?from_conf ?to_conf ?obj ?from_pose ?to_pose)
        (CFreePush ?robot ?from_conf ?to_conf ?obj ?from_pose ?to_pose ?other_obj ?pose)
        (Feasible ?robot ?from_conf ?to_conf ?obj ?from_pose ?to_pose ?other_obj ?pose)

        ; fluent predicates
        (AtConf ?robot ?conf)
        (AtWorldPose ?obj ?pose)
        (AtRelPose ?obj ?pose ?ref_obj)

        ; derived predicates
        (Clear ?obj)
        (Grounded ?obj)
        (UnknownPose ?obj)
        (Overlaps ?obj ?region)
        (BadPush ?robot ?from_conf ?to_conf ?obj ?from_pose ?to_pose)
    )

    ; actions

    (:action move
        :parameters (?robot ?from_conf ?to_conf)
        :precondition (and (Robot ?robot) (Conf ?from_conf)
                           (Conf ?to_conf) (AtConf ?robot ?from_conf)
                      )
        :effect (and (not (AtConf ?robot ?from_conf))
                     (AtConf ?robot ?to_conf)
                )
    )

    (:action push
        :parameters (?robot ?from_conf ?to_conf ?obj ?from_pose ?to_pose)
        :precondition (and (Robot ?robot) (Obj ?obj) (Grounded ?obj)
                           (Conf ?from_conf) (Conf ?to_conf)
                           (WorldPose ?obj ?from_pose) (WorldPose ?obj ?to_pose)
                           (AtConf ?robot ?from_conf) (AtWorldPose ?obj ?from_pose)
                           (PushConf ?robot ?from_conf ?to_conf ?obj ?from_pose ?to_pose)
                           (not (BadPush ?robot ?from_conf ?to_conf ?obj ?from_pose ?to_pose))
                      )
        :effect (and (not (AtWorldPose ?obj ?from_pose)) (AtWorldPose ?obj ?to_pose)
                     (forall (?other_obj ?pose) (when (and (Obj ?other_obj) (Grounded ?other_obj) (WorldPose ?other_obj ?pose)
                                                           (AtWorldPose ?other_obj ?pose) (not (= ?obj ?other_obj)) (not (= ?from_pose ?pose))
                                                           (not (CFreePush ?robot ?from_conf ?to_conf ?obj ?from_pose ?to_pose ?other_obj ?pose))
                                                      )
                                                      (not (AtWorldPose ?other_obj ?pose))
                                                )
                     )
                     (forall (?other_obj1 ?world_pose1 ?rel_pose1) (when (and (PoseKin ?other_obj1 ?world_pose1 ?rel_pose1 ?obj ?from_pose)
                                                                           (AtRelPose ?other_obj1 ?rel_pose1 ?obj)
                                                                      )
                                                                      (not (AtWorldPose ?other_obj1 ?world_pose1))
                                                                )
                     )
                     (forall (?other_obj ?world_pose ?rel_pose) (when (and (PoseKin ?other_obj ?world_pose ?rel_pose ?obj ?to_pose)
                                                                           (AtRelPose ?other_obj ?rel_pose ?obj)
                                                                      )
                                                                      (AtWorldPose ?other_obj ?world_pose)
                                                                )
                     )
                )
    )
    
    ; define derived predicates

    (:derived (Clear ?obj)
        (and (Obj ?obj) (not (exists (?other_obj) (and (Obj ?other_obj) (not (= ?obj ?other_obj)) (On ?other_obj ?obj)))))
    )
    (:derived (Grounded ?obj)
        (and (Obj ?obj) (not (exists (?other_obj) (and (Obj ?other_obj) (not (= ?obj ?other_obj)) (On ?obj ?other_obj)))))
    )
    (:derived (UnknownPose ?obj)
        (and (Obj ?obj) (not (exists (?pose) (and (WorldPose ?obj ?pose) (AtWorldPose ?obj ?pose)))))
    )
    (:derived (Overlaps ?obj ?region)
        (and (Obj ?obj) (Region ?region)
             (exists (?pose) (and (WorldPose ?obj ?pose) (AtWorldPose ?obj ?pose)
                                  (Touches ?obj ?pose ?region)
                             )
             )
        )
    )
    (:derived (BadPush ?robot ?from_conf ?to_conf ?obj ?from_pose ?to_pose)
        (and (PushConf ?robot ?from_conf ?to_conf ?obj ?from_pose ?to_pose)
             (exists (?other_obj ?pose) (and (not (= ?obj ?other_obj)) (not (= ?from_pose ?pose))
                                             (Obj ?obj) (WorldPose ?other_obj ?pose) (AtWorldPose ?other_obj ?pose)
                                             (not (Feasible ?robot ?from_conf ?to_conf ?obj ?from_pose ?to_pose ?other_obj ?pose))
                                        )
             )
        )
    )
)
